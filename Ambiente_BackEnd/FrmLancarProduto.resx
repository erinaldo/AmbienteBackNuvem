<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADNElEQVRYR7WXz0sUYRjH19T8sWuX0tXdS4cOZd26aFltUJZtSxBYdCgI15DIP0DQIjsWBBFRHSoK
        jSgI/4DKukSHSFsLBSu1Uyrhzi6ra+bT88y87/b6zjOzs4oPfEAY9/l8Z+b9NT6vBRerAxAPnYZ4+B7E
        6z7g39PI4lyjD5J7N/w1IiXp9KGyL5mo/2aqOVAjfrb2gnhNEEW3kTQCOnMNPhvJxqLl9OGyoeyJQL1o
        U3hB57YyaAtdRklKl6pwASTJPUXLmeaKVxCpDoi23grOhTfjY37DCXU4sY4RKTWy0cAu0d694HxtPTae
        0EVOcEIOY1/xn4VoZVRo+LLuPPyNEznByZygEI7jAi7sLkX5ICdxgxO5kTpYmmTHBDa7ojeXLHVHYO7j
        W5h/1GW7pgt+PrsPY0OfYebSUds1SfpI+TuhtUpMNXa0L3U1we8f4zA7mzTJPL224rraeOrFQ0gkRk2+
        jozCTGfLius5GotgPlbVJPTm3dM8X9GY0OVcCNlUlXsJgevEiCU/G/RjI/bu6bHrckmm72ouwOTLJza5
        ZOzTsE1O4BoB6TP+IN09Lq92OUHvnJNLKISbnKAxwQUgMi3+GxiA1nY+AJF53M3KJZxUMjnQx4oltHdg
        AHNjYeUStxCcmMgnJ4wDJQa9ghlV5oRTiNXKCdpFKUBWlznBhVit3ASnY4EBevIGmBjo52UcIoDHV2CX
        cwEKCSFegZdByMsJLgDhJYQ1CNvr7upCFTc5wckl+UKYqyG0h09xYmL9F6KK6+u/FOPOqIsJOjfmDq/Y
        6JYqljhuRv29uf+RDaeeP7DJ82xGCVNOBR3BGmxmyKYqtu1YkRNqUzVEvu04c3JTg9BbhXtCj9pYxTqQ
        DHo+kIwOJ9wPJM3lg0L7v6wjmbeTsAoncMPxSEZlHUpD47rEDU7ihHkojVVtFzq+8CnswMbfdZETnIjD
        2F+8uHC88pjQuJf5JNpDrzmhDifTocde8GcatO7ciIJeZEEV6nDCHDjaacBBLFQp2hZe0FG7FUV3EHaa
        cmL6JqR5bptqaylzxWwLt6KUwrxHfiFZukvxeZ4ypbi8GrGqLeJnecrn+wfihabw6nX70AAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="btnConfirmar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADUUlEQVRYR6WXTU8TURSGu1ETZaeBrUsl/gAX/gJdqwsqiItaNY0L3fhBe6akhFiUgMbYhSiJ/gGj
        S5VoFFssCNMPGsAQo3SGVgwfC8HI9ZzpTFvvnOkM5STPom16nnfuvXPnjs9rwTK0hDXlbESDRERTkqAp
        y8hWRzIiuj7D3+5JZSOgQvZSDgaD8/FW82+7r5t6rA105QHKNlAsZDqSYOPchLIdUJUvoSy0m212XqG5
        4X2gR8MoWZel9XABLPwTsB3MwOvLWWgx23qrG9/7Dka06FtOKMOJZbqnlLVgLnbMbN+4oAjtONyLnIyD
        E3LgOvkTysVOmRq+KleuLMiSRnAyJ7rSGMJpXQREYg9e+RgnaQQnasSFKVhl10RYVyKcwA1O4sbFGXhn
        aitFtxo2a7janeAE7kQEjsIJU48LD+9zrrkX5Oadqaj4lJ8War4gbk0mbL9bBKYhY8iva/ED2Kipqyfq
        m5I8OTsjVHXWIJMtiB6HEP5URFxVY22+yvbKN/eC1VCWewmB0zDgM/d2trkXqBHJU3nVJrdI53M2ORGY
        gSwGUJJy03ruaUOiX7vD/ka4ydVMQTxWX7AB8JZcowAluanFiD4q9PJP8a28JIb0+7bfFQ2H3UX+RH3J
        yolOfIpSgE25MWHJy+VVAzkEyT+UkrwYyRjyV6y4RkSwAUb0pyhfqcotFss/xCBOCck/llLGd85y5yuv
        UQlgm4L3y+M2uQWFSJXS1c/Ny2tTYFuEtOhmSwv/iZ2wy92GvYaxCPEB9EgOsJMQzcoJYzeEYvQMF4Dw
        EqJZOYEbUdx1K3YL0ayczo3VwytOwzAnt3AKoZd/eV5wMrgLqoacCjRoxRBrnNxCDkHyUf0529wNfwpE
        aA6Om/pK4YGkhxPX06/FRQFD6KUVlD8zvuMEbgRVGDO1taIjmZeTcK8WEwP63epnTtAIxyMZFR1KcSrm
        64VucBIn6GQcKPQdMXV83V7qPYohvnIyDk7EcT6tbF3JwUlT07jMkXjDCWU4mQwN+45f0yALe6GoRDHI
        b05swQktaLXTggssJfabbXde+KZ0GIM8dLpNWTG+E9J9brvVdlO0Y4aLymkKg+JxREc2/SikpxoO8zpJ
        aXu9VoBD5t9cyuf7B7fOk2hKZaszAAAAAElFTkSuQmCC
</value>
  </data>
</root>